# vim: ft=colortemplate fdm=marker cc=22,40,58

# markdown{{{
markdownLinkText -> Blue
markdownHeadingDelimiter -> Red
markdownIdDeclaration -> Cyan
markdownId -> Cyan
markdownListMarker -> Cyan
markdownCodeDelimiter -> Cyan
markdownCode -> Green
markdownBoldDelimiter -> Grey
markdownRule -> Purple

mkdLink -> Blue
mkdHeading -> Red
mkdLinkDef -> Cyan
mkdID -> Cyan
mkdListItem -> Cyan
mkdCodeDelimiter -> Cyan
mkdCode -> Green
mkdBold -> Grey
mkdRule -> Purple
#}}}
# rst{{{
rstDirective -> Blue
rstExplicitMarkup -> Red
rstInterpretedTextOrHyperlinkReference -> Green
rstInlineLiteral -> Green
rstSubstitutionReference -> Cyan
#}}}
# tex{{{
texStatement -> Blue
texDefCmd -> Red
texDefName -> Cyan
texOnlyMath -> Grey
#}}}
# html{{{
htmlTag -> Purple
htmlArg -> Blue
htmlEndTag -> Blue
#}}}
# xml{{{
xmlTag -> Purple
xmlTagName -> Purple
xmlAttrib -> Blue
#}}}
# css{{{
cssFunctionName -> Yellow
cssClassName -> Purple
cssClassNameDot -> Purple
cssAttrComma -> Fg
cssTagName -> Purple
cssBraces -> Fg
cssSelectorOp -> Fg
cssVendor -> Grey
cssSelectorOp2 -> Blue
cssImportant -> Red
#}}}
# sass{{{
sassMixing -> Green
sassClass -> Purple
sassClassChar -> Purple
sassMixin -> Blue
sassAmpersand -> Cyan
sassFunction -> Yellow
#}}}
# scss{{{
scssSelectorChar -> Purple
scssSelectorName -> Purple
scssForKeyword -> Red
scssDefault -> Red
scssAmpersand -> Cyan
scssMixinName -> Yellow
scssFunctionName -> Yellow
#}}}
# less{{{
lessMixinChar -> Purple
lessClass -> Purple
lessVariable -> Red
lessAmpersandChar -> Cyan
lessFunction -> Yellow
#}}}
# js{{{
jsGlobalNodeObjects -> Red
jsGlobalObjects -> Yellow
jsFunction -> Blue
jsObjectMethodType -> Red
jsOperatorKeyword -> Red
jsThis -> Cyan
jsParensError -> Red
jsArrowFunction -> Blue
jsTaggedTemplate -> Cyan

javaScriptReserved -> Purple
javaScriptBraces -> Fg
javaScriptOperator -> Red
javaScriptNull -> Yellow
javaScriptMessage -> Cyan
javaScriptGlobal -> Blue


#}}}
# ts{{{
typescriptLabel -> Purple
typescriptExceptions -> Red
typescriptBraces -> Fg
typescriptEndColons -> Fg
typescriptParens -> Fg
typescriptDocTags -> Purple
typescriptLogicSymbols -> Blue

typescriptImport -> Red
typescriptBOM -> Blue
typescriptVariableDeclaration -> Cyan
typescriptVariable -> Red
typescriptExport -> Purple
typescriptAliasDeclaration -> Yellow
typescriptClassName -> Blue
typescriptAccessibilityModifier -> Purple
typescriptOperator -> Red
typescriptArrowFunc -> Blue
typescriptMethodAccessor -> Red
typescriptMember -> Blue
typescriptTypeReference -> Cyan
typescriptDefault -> Yellow
typescriptTemplateSB -> Cyan
typescriptArrowFuncArg -> Cyan
typescriptParamImpl -> Green
typescriptFuncComma -> White
jsxOpenPunct -> Blue
typescriptCastKeyword -> Red
typescriptCall -> Blue
typescriptCase -> Red
#}}}
# dart{{{
dartMetadata -> Red
dartInterpolation -> Cyan
dartCoreClasses -> Blue
#}}}
# coffee{{{
coffeeParens -> Green
coffeeCurly -> Fg
coffeeParen -> Fg
coffeeSpecialOp -> Fg
coffeeInterp -> Cyan
coffeeInterpDelim -> Cyan
coffeeConstant -> Blue
coffeeOperator -> Red
coffeeExtendedOp -> Blue
#}}}
# purescript{{{
purescriptModuleKeyword -> Purple
purescriptModule -> Red
purescriptModuleName -> Red
purescriptClassName -> Blue
purescriptImport -> Cyan
purescriptAsKeyword -> Purple
purescriptImportAs -> Blue
purescriptWhere -> Purple
#}}}
# java{{{
javaScopeDecl -> Red
javaTypedef -> Cyan
javaAnnotation -> Blue
#}}}
# kotlin{{{
ktStructure -> Red
ktAnnotation -> Blue
ktKeyword -> Blue
ktArrow -> Blue
#}}}
# python{{{
pythonNone -> Yellow
pythonExClass -> Blue
pythonDecorator -> Red
pythonDottedName -> Red
#}}}
# go{{{
goPackage -> Red
goImport -> Red
goDeclType -> Blue
goBuiltins -> Blue
#}}}
# rust{{{
rustModPath -> Purple
rustAttribute -> Purple
rustPubScopeCrate -> Green
rustStructure -> Purple
rustSigil -> Blue
rustSelf -> Cyan
rustEnumVariant -> Blue
rustDerive -> Purple
rustDeriveTrait -> Red
#}}}
# php{{{
phpUseClass -> Blue
phpClass -> Purple
phpClassExtends -> Blue
phpParent -> Fg
phpFunction -> Blue
phpType -> Purple
phpMethod -> Yellow
phpMemberSelector -> Green
#}}}
# csharp{{{
csUnspecifiedStatement -> Red
csEndColon -> Fg
csBraces -> Fg
csParens -> Fg
csClass -> Red
csType -> Red
csNewType -> Yellow
csClassType -> Blue
csAsync -> Red
csLogicSymbols -> Blue
csLabel -> Blue
#}}}
# fsharp{{{
fsharpOpen -> Purple
fsharpModule -> Blue
fsharpSymbol -> Cyan
fsharpCoreClass -> Blue
fsharpException -> Purple
fsharpScript -> Purple
fsharpAttrib -> Purple
fsharpAttribute -> Blue
#}}}
# swift{{{
swiftStructure -> Purple
swiftAttributes -> Purple
#}}}
# ruby{{{
rubyModule -> Purple
rubyModuleName -> Red
rubyClassName -> Blue
rubyConstant -> Cyan
rubyAttribute -> Purple
rubyInstanceVariable -> Yellow
rubyAccess -> Purple
#}}}
# perl{{{
perlPackageDecl -> Blue
perlStatementPackage -> Red
perlFunction -> Purple
perlStatementInclude -> Red
podCommand -> Red
podVerbatimLine -> Green
podCmdText -> Purple
perlStatementStorage -> Red
perlStatementHash -> Red
perlStatementList -> Green
perlStatementIndirObj -> Fg
perlMethod -> Yellow
perlPackageRef -> Blue
#}}}
# haskell{{{
haskellDeclKeyword -> Red
haskellType -> Blue
haskellDecl -> Purple
haskellPreProc -> Purple
haskellWhere -> Red
haskellOperators -> Purple
#}}}
# lua{{{
luaLocal -> Red
luaBraces -> Fg
luaSpecialTable -> Blue
luaSpecialValue -> Yellow
luaFuncCall -> Blue
luaFuncKeyword -> Purple
luaFuncTable -> Cyan
#}}}
# moonscript{{{
moonLuaFunc -> Purple
moonSpecialOp -> Fg
moonObject -> Blue
moonInterpDelim -> Cyan
#}}}
# d{{{
dImport -> Purple
dStructure -> Red
dEnum -> Purple
dScopeDecl -> Red
dAnnotation -> Blue
dAttribute -> Blue
#}}}
# scala{{{
scalaCapitalWord -> Purple
scalaKeywordModifier -> Purple
scalaInstanceDeclaration -> Blue
scalaSpecial -> Purple
scalaSquareBracketsBrackets -> Fg
scalaTypeDeclaration -> Yellow
#}}}
# elixir{{{
elixirModuleDeclaration -> Purple
elixirInclude -> Purple
elixirAlias -> Blue
elixirVariable -> Yellow
elixirPseudoVariable -> Yellow
elixirDefine -> Purple
elixirMacroDeclaration -> Purple
elixirModuleDefine -> Purple
elixirProtocolDefine -> Purple
elixirImplDefine -> Purple
elixirRecordDefine -> Purple
elixirPrivateRecordDefine -> Purple
elixirMacroDefine -> Purple
elixirPrivateMacroDefine -> Purple
elixirDelegateDefine -> Purple
elixirOverridableDefine -> Purple
elixirExceptionDefine -> Purple
elixirCallbackDefine -> Purple
elixirStructDefine -> Purple
#}}}
# ocaml{{{
ocamlModule -> Blue
ocamlEqual -> Blue
ocamlPpxEncl -> Purple
ocamlArrow -> Blue
ocamlModPath -> Purple
ocamlKeyChar -> Blue
ocamlFullMod -> Purple
ocamlFuncWith -> Fg
ocamlWith -> Blue
ocamlModParam1 -> Green
ocamlModPreRHS -> Fg
ocamlConstructor -> Green
#}}}
# clojure{{{
clojureDefine -> Purple
clojureQuote -> Fg
clojureSpecial -> Purple
clojureDispatch -> Yellow
clojureVariable -> Green
#}}}
# erlang{{{
erlangType -> Purple
erlangLocalFuncCall -> Blue
erlangLocalFuncRef -> Yellow
erlangGlobalFuncCall -> Purple
#}}}
# julia{{{
juliaBlKeyword -> Purple
#}}}
# lisp{{{
lispDecl -> Red
lispKey -> Blue
#}}}
# sh{{{
shCommandSub -> Red
shDerefSimple -> Blue
shDerefVar -> Yellow
shQuote -> Green
shFunction -> Red
#}}}
# zsh{{{
zshOptStart -> Purple
zshOption -> Blue
zshSubst -> Yellow
zshFunction -> Purple
zshDeref -> Blue
zshTypes -> Purple
#}}}
# fish{{{
fishIdentifier -> Blue
#}}}
# vim{{{
vimFunction -> Blue
vimLet -> Red
vimMap -> Blue
vimMapMod -> Yellow
vimMapLhs -> Green
vimMapRhs -> Green
vimNotation -> Purple
vimAugroupKey -> Red
vimAutoCmd -> Blue
#}}}
# json{{{
jsonKeyword -> Blue
#}}}
# yaml{{{
yamlKey -> Blue
#}}}
# toml{{{
tomlKey -> Blue
#}}}
# diff{{{
diffAdded -> Green
diffRemoved -> Red
diffChanged -> Yellow
diffOldFile -> Blue
diffNewFile -> Purple
diffFile -> Green
diffLine -> Grey
diffIndexLine -> Cyan
#}}}
# help{{{
helpHyperTextEntry -> Blue
helpHyperTextJump -> Red
helpSectionDelim -> Grey
helpExample -> Green
helpCommand -> Purple
helpHeadline -> Purple
helpHeader -> Blue
#}}}
